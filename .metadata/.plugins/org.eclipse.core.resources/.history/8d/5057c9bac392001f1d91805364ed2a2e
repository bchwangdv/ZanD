<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
<meta charset="UTF-8">
<title>The ZD</title>
<!-- JQuery 3.7.1-->
<script src="https://code.jquery.com/jquery-3.7.1.js"></script>
</head>
<!-- navbar -->
<div th:replace="~{navbar :: navbar}"></div>
<!-- css -->
<link type="text/css" href='css/searchResult.css' rel="stylesheet">
<body>
<div class="halfline"></div>
<div class="container">
	<div class="namecardContainer">
		<div class="namecard">
			<div id="nickname">[[${nickname}]]</div>
			<div id="divisionDiv">
				<div class="division" id="officialDivision"></div>
				<div class="division" id="managerModeDivision"></div>
			</div>
		</div>
		<!-- 여백 -->
		<div style="width: 500px"></div>
	</div>
	<input type="hidden" id="ouidDiv"></input> 
	<div class="tabResultContainer">
		<ul class="nav nav-tabs">
			<li class="nav-item">
				<button class="nav-link active" id="officialMatch" value="50" >공식경기</button>
			</li>
			<li class="nav-item">
				<button class="nav-link" id="classic1on1" value="40">클래식 1on1</button>
			</li>
			<li class="nav-item">
				<button class="nav-link" id="managerMode" value="52">감독모드</button>
			</li>
		</ul>
		<div class="loadingResultContainer">
			<div class="loading">
				<img class="loadingImg m-3" src='image/loading.gif'>
				<h6>매치정보를 불러오고 있습니다..</h6>
			</div>
			<div class="resultContainer">
			</div>
		</div>
	</div>
</div>
<script th:inline="javascript">
const API_KEY = "live_cae361c9b131e27b911a544f8f7a1b8b67203348dc67e50449555d9ad071d788efe8d04e6d233bd35cf2fabdeb93fb0d";
const resultDiv = $("#searchResult");
const resultContainer = $(".resultContainer");
const nickname = [[${nickname}]]

if(nickname.trim() == '' || nickname == null) {
	alert('닉네임을 입력해야합니다.');
	window.location.replace('http://localhost:8080/main');
}

const ouidReq = "https://open.api.nexon.com/fconline/v1/id?nickname=" + nickname;
let conditionNo = [[${conditionNo}]];

fetch(ouidReq, {
	headers:{
		"x-nxopen-api-key": API_KEY
	}
})
.then(response => response.json())
.then(data => {
	ouid = data.ouid
	$("#ouidDiv").val(ouid);
	loadDivisionData(ouid);
	
	const tabs = document.getElementsByClassName('nav-link')
	for(const tab of tabs){
		tab.addEventListener('click', function() {
			for(const tab of tabs){
				tab.classList.remove('active');
			}
			this.classList.add('active');
			$(".loading").css("display","block");
			loadMatchData(ouid, this.value);
		});
	}
	
	loadMatchData(ouid, conditionNo);
})
.catch(error => console.error(error));

function loadDivisionData() {
	const divisionReq = "https://open.api.nexon.com/fconline/v1/user/maxdivision?ouid=" + ouid;
	fetch(divisionReq, {
		headers: {
            "x-nxopen-api-key": API_KEY
        }
	})
	.then(response => response.json())
    .then(userDivisions => {
    	const officialDivision = document.getElementById("officialDivision");
    	const managerModeDivision = document.getElementById("managerModeDivision");
    	
    	for(const userDivision of userDivisions) {
    		if (userDivision.matchType == 50) {
    			officialDivision.innerHTML = userDivision.division;
    		} else if (userDivision.matchType == 52) {
	    		managerModeDivision.innerHTML = userDivision.division;
    		}
    	}
    	
    	const DivisionListReq = "https://open.api.nexon.com/static/fconline/meta/division.json";
    	fetch(DivisionListReq, {})
    	.then(response => response.json())
    	.then(divisionList => {
    		for(const division of divisionList) {
    			if(officialDivision.innerHTML == division.divisionId) {
    				officialDivision.innerHTML = "공식경기 최고티어 : ";
    				officialDivision.innerHTML += '<img class="divisionImg" src="https://ssl.nexon.com/s2/game/fo4/obt/rank/large/update_2009/ico_rank' + divisionList.findIndex(i => i == division) + '_m.png">'
    				officialDivision.innerHTML += "(" + division.divisionName + ")";
    			}
    			if(managerModeDivision.innerHTML == division.divisionId) {
    				managerModeDivision.innerHTML = "감독모드 최고티어 : ";
    				managerModeDivision.innerHTML += '<img class="divisionImg" src="https://ssl.nexon.com/s2/game/fo4/obt/rank/large/update_2009/ico_rank' + divisionList.findIndex(i => i == division) + '_m.png">'
    				managerModeDivision.innerHTML += "(" + division.divisionName + ")";
    			}
    		}
		})
    })
	.catch(error => console.error(error));
}

function loadMatchData(ouid, conditionNo) {
	resultContainer.empty();
	const matchReq = "https://open.api.nexon.com/fconline/v1/user/match?ouid=" + ouid + "&matchtype=" + conditionNo + "&limit=10";
	fetch(matchReq, {
		headers: {
            "x-nxopen-api-key": API_KEY
        }
	})
	.then(response => response.json())
    .then(matchIds => {
    	if (matchIds.length == 0) {
    		const matchContainer = document.createElement("div");
    		// 스타일을 위한 클래스 추가
            matchContainer.className = "noResult";
            matchContainer.innerText = '최근 경기 결과가 없습니다.'
            resultDiv.append(matchContainer);
        	return;
        }
        const matchDetailPromises = matchIds.map(matchId => {
		const matchDetailReq = "https://open.api.nexon.com/fconline/v1/match-detail?matchid=" + matchId;
		return fetch(matchDetailReq, {
				headers: {
					"x-nxopen-api-key": API_KEY
				}
			}).then(response => response.json());
        });
        
        Promise.all(matchDetailPromises)
        .then(matchDetails => {
        	matchDetails.sort((a, b) => new Date(b.matchDate) - new Date(a.matchDate));
        	const usersOuid = $("#ouidDiv").val();
        	
            matchDetails.forEach((data, index) => {
            	const matchContainer = document.createElement("div");
                matchContainer.className = "match-container";
                matchContainer.id = `match-container-${index}`;
				
                const accordionDiv = document.createElement("div");
                const accordionBtn = document.createElement("button");
                
                accordionBtn.className = "accordion-button button" + index + " collapsed";
                
                accordionBtn.setAttribute("data-bs-toggle", "collapse");
                accordionBtn.setAttribute("data-bs-target", `#matchDetailContent-${index}`);
                accordionBtn.setAttribute("aria-expanded", "false");
                accordionBtn.setAttribute("aria-controls", `matchDetailContent-${index}`);
                
                const matchDetailContent = document.createElement("div");
                matchDetailContent.id = `matchDetailContent-${index}`;
                matchDetailContent.className = "accordion-collapse collapse";
                
                const dateDiv = document.createElement("div");
                const matchTypeDiv = document.createElement("div");
                const opResultDiv = document.createElement("div");
                const matchResultDiv = document.createElement("div");
                
                accordionBtn.append(matchContainer);
                accordionDiv.append(accordionBtn);
                accordionDiv.append(matchDetailContent);
                resultContainer.append(accordionDiv);
                
            	// 날짜 및 시간 처리
                const KSTmatchDate = new Date(data.matchDate);
                KSTmatchDate.setHours(KSTmatchDate.getHours()+9);
                
				const matchYear = KSTmatchDate.getFullYear();
				const matchMonth = String(KSTmatchDate.getMonth() + 1).padStart(2, '0');
				const matchDay = String(KSTmatchDate.getDate()).padStart(2, '0');
				const matchHours = String(KSTmatchDate.getHours()).padStart(2, '0');
				const matchMinutes = String(KSTmatchDate.getMinutes()).padStart(2, '0');
				const matchTime = matchHours + ':' + matchMinutes;
                const matchDate = matchYear + '년 ' + matchMonth + '월 ' + matchDay + '일 ' + matchTime
                
            	// 날짜 및 시간 출력
				dateDiv.innerHTML = matchDate;
				matchContainer.appendChild(dateDiv);

                // 매치 타입 출력
                if(data.matchType == 50) {
                	matchTypeDiv.innerHTML = '매치타입 : 공식경기';
                } else if (data.matchType == 40) {
                	matchTypeDiv.innerHTML = '매치타입 : 클래식 1on1';
                } else if (data.matchType == 52) {
                	matchTypeDiv.innerHTML = '매치타입 : 감독모드';
                }
                matchContainer.appendChild(matchTypeDiv);

                // 매치 결과 출력
                // 검색 계정을 앞에 둠
                // API에서 갑자기 상대 정보가 안뜬다?? ** 수정 필요 **
                		
                if(data.matchInfo[1] != undefined) {
                	if (data.matchInfo[0].ouid == usersOuid) {
    					var myInfo = data.matchInfo[0]
    					var opInfo = data.matchInfo[1]
    				} else {
    					var myInfo = data.matchInfo[1]
    					var opInfo = data.matchInfo[0]
    				}
    				
    				opResultDiv.innerHTML = '상대 : ' + opInfo.nickname;
    				matchContainer.appendChild(opResultDiv);
    				
    				// 몰수승, 몰수패 Check
    				
    				if(myInfo.shoot.goalTotal == null) {
    					myInfo.shoot.goalTotal = 0;
    					myInfo.shoot.shootOutScore = 0;
    					myInfo.matchDetail.matchResult = "몰수패"
    				}
    				if(opInfo.shoot.goalTotal == null) {
    					opInfo.shoot.goalTotal = 0;
    					opInfo.shoot.shootOutScore = 0;
    					opInfo.matchDetail.matchResult = "몰수승"
    				}
    				
    				matchResultDiv.innerHTML = myInfo.shoot.goalTotal + ' : ' + opInfo.shoot.goalTotal + ' ' + myInfo.matchDetail.matchResult;
    				
    				if(!(myInfo.shoot.shootOutScore == 0 && opInfo.shoot.shootOutScore == 0)){
    					matchResultDiv.innerHTML += ' (' + myInfo.shoot.shootOutScore + '-' + opInfo.shoot.shootOutScore + ')';
    				}
					matchContainer.appendChild(matchResultDiv);
					
					const myFieldDiv = document.createElement("div");
					myFieldDiv.id = "myFieldDiv";
					
					const allPlayersDiv = document.createElement("div");
				    allPlayersDiv.id = "allPlayersDiv";
				    allPlayersDiv.classList.add('row');
				    		
				    const myPlayersDiv = document.createElement("div");
				    myPlayersDiv.id = 'myPlayersDiv-' + index;
				    myPlayersDiv.classList.add('playersDiv');
				    myPlayersDiv.classList.add('col-6');
				    
				    const mySubPlayersDiv = document.createElement("div");
				    mySubPlayersDiv.id = 'mySubPlayersDiv-' + index;
				    mySubPlayersDiv.classList.add('playersDiv');
				    mySubPlayersDiv.classList.add('col-6');
				    
				    const opFieldDiv = document.createElement("div");
					opFieldDiv.className = "opFieldDiv";
				    
				    const opPlayersDiv = document.createElement("div");
				    opPlayersDiv.id = 'opPlayersDiv-' + index;
				    opPlayersDiv.classList.add('playersDiv');
				    opPlayersDiv.classList.add('col-6');
				    
				    const opSubPlayersDiv = document.createElement("div");
				    opSubPlayersDiv.id = 'opSubPlayersDiv-' + index;
				    opSubPlayersDiv.classList.add('playersDiv');
				    opSubPlayersDiv.classList.add('col-6');
				    
// 				    allPlayersDiv.append(myFieldDiv);
// 				    allPlayersDiv.append(opFieldDiv);
				    allPlayersDiv.append(myPlayersDiv);
				    allPlayersDiv.append(opPlayersDiv);
				    allPlayersDiv.append(mySubPlayersDiv);
				    allPlayersDiv.append(opSubPlayersDiv);
				    
				    matchDetailContent.append(allPlayersDiv);
				
					// 승,패에 색 추가
					
					if (myInfo.matchDetail.matchResult == '승' || myInfo.matchDetail.matchResult == '몰수승') {
						accordionBtn.style.background = "#0077FF26"; //승
					} else if (myInfo.matchDetail.matchResult == '패' || myInfo.matchDetail.matchResult == '몰수패'){
						accordionBtn.style.background = "#FF000010"; //패
					} else {
						accordionBtn.style.background = "#00FF0010"; //무
					}
					
                } else {
                	accordionBtn.style.background = "#00000030";
                	opResultDiv.innerHTML = '상대 : 알수 없음';
                	matchResultDiv.innerHTML = '매치 불러오기를 실패했습니다.';
                	opResultDiv.classList.add('text-danger');
                	matchResultDiv.classList.add('text-danger');
                	matchContainer.appendChild(opResultDiv);
                	matchContainer.appendChild(matchResultDiv);
                }

                accordionBtn.addEventListener('click', ()=>{
                	loadMatchDetail(index, matchDetailContent, myInfo, opInfo)
                });
                
                // 로딩 완료
                $(".loading").css("display","none");
            });
        })
		.catch(error => console.error(error))
	})
	.catch(error => console.error(error))
}

const loadStatus = {};

//아코디언 버튼 클릭 시 호출되는 function
function loadMatchDetail(index, matchDetailContent, myInfo, opInfo) {
	
	if (loadStatus[index]) {
        return;
    }
	
	loadStatus[index] = true;
	
    let myPlayers = [];
    let opPlayers = [];
    let category;
    
   	for(var i = 0; i < myInfo.player.length; i++){
   		myPlayers[i] = myInfo.player[i];
		category = 0;
		loadPlayersInfo(index, myPlayers[i], category);
    }
    for(var i = 0; i < opInfo.player.length; i++){
   		opPlayers[i] = opInfo.player[i];
       	category = 1;
       	loadPlayersInfo(index, opPlayers[i], category);
    }
}

let spDataMap = {};
let seasonDataMap = {};
let spPositionDataMap = {};

function loadMetaData() {
	const spDataReq = "https://open.api.nexon.com/static/fconline/meta/spid.json";
	fetch(spDataReq)
	.then(response => response.json())
	.then(spData => {
		spData.forEach(player => {
			spDataMap[player.id] = player;
		});
	});
	
	const seasonDataReq = "https://open.api.nexon.com/static/fconline/meta/seasonid.json";
	fetch(seasonDataReq)
	.then(response => response.json())
	.then(seasonData => {
		seasonData.forEach(season => {
			seasonDataMap[season.seasonId] = season;
		});
	});
	
	const spPositionDataReq = "https://open.api.nexon.com/static/fconline/meta/spposition.json";
	fetch(spPositionDataReq)
	.then(response => response.json())
	.then(spPositionData => {
		spPositionData.forEach(spPosition => {
			spPositionDataMap[spPosition.spposition] = spPosition;
		});
	});
}
//메타데이터 로드
loadMetaData();

function loadPlayersInfo(index, playerInfo, category){
	const myPlayersDiv = document.getElementById('myPlayersDiv-' + index);
	const mySubPlayersDiv = document.getElementById('mySubPlayersDiv-' + index);
	const myFieldDiv = document.getElementById('myFieldDiv');
	const opPlayersDiv = document.getElementById('opPlayersDiv-' + index);
	const opSubPlayersDiv = document.getElementById('opSubPlayersDiv-' + index);
	const opFieldDiv = document.getElementById('opFieldDiv');
	
	if(spDataMap[playerInfo.spId]) {
		const playerImgSrc = "https://fco.dn.nexoncdn.co.kr/live/externalAssets/common/playersAction/p" + playerInfo.spId + ".png";
    	const onErrorImgSrc = "this.src='https://ssl.nexon.com/s2/game/fc/mobile/squadMaker/default/d_player.png'";
    	const seasonImgSrc = seasonDataMap[playerInfo.spId.toString().substring(0, 3)].seasonImg;
    	const playerName = spDataMap[playerInfo.spId].name;
    	const playerGrade = playerInfo.spGrade;
    	
		if(category == 0) {
			if (playerInfo.spPosition == 28) {
                mySubPlayersDiv.innerHTML += "<div class='player'>[교체] " + spDataMap[playerInfo.spId].name + "</div>";
            } else {
            	myPlayersDiv.innerHTML +=
            	    "<div class='player'>" +
            	        "<img class='playerImg' src='" + playerImgSrc + "' onerror=\"" + onErrorImgSrc + "\"/>" + 
            	        "<img class='seasonImg' src='" + seasonImgSrc + "'/>" + 
            	    	"<div class='grade" + playerGrade + "'>" + playerGrade + "</div>" +
            	    	"<div class='item' data-position='"+ spPositionDataMap[playerInfo.spPosition].desc + "'>"+ spPositionDataMap[playerInfo.spPosition].desc +"</div>" +
            	    	playerName if(playerInfo.status.goal != 0) + "득점"
            	    "</div>";
            }
		} else {
			if (playerInfo.spPosition == 28) {
                opSubPlayersDiv.innerHTML += "<div class='player'>[교체] " + spDataMap[playerInfo.spId].name + "</div>";
            } else {
                opPlayersDiv.innerHTML +=
	                "<div class='player'>" + 
	        	        "<img class='playerImg' src='" + playerImgSrc + "' onerror=\"" + onErrorImgSrc + "\"/>" + 
	        	        "<img class='seasonImg' src='" + seasonImgSrc + "'/>" +
            	    	"<div class='grade" + playerGrade + "'>" + playerGrade + "</div>" +
            	    	"<div class='item' data-position='"+ spPositionDataMap[playerInfo.spPosition].desc + "'>"+ spPositionDataMap[playerInfo.spPosition].desc +"</div>" +
	        	        playerName + 
	        	    "</div>";
            }
		}
	}
}

</script>
</body>
</html>